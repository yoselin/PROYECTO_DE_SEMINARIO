#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace seminario.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BIBLIOTECAVIRTUAL")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMINISTRADOR(ADMINISTRADOR instance);
    partial void UpdateADMINISTRADOR(ADMINISTRADOR instance);
    partial void DeleteADMINISTRADOR(ADMINISTRADOR instance);
    partial void InsertARCHIVO(ARCHIVO instance);
    partial void UpdateARCHIVO(ARCHIVO instance);
    partial void DeleteARCHIVO(ARCHIVO instance);
    partial void InsertARTICULO(ARTICULO instance);
    partial void UpdateARTICULO(ARTICULO instance);
    partial void DeleteARTICULO(ARTICULO instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void InsertAUTOR(AUTOR instance);
    partial void UpdateAUTOR(AUTOR instance);
    partial void DeleteAUTOR(AUTOR instance);
    partial void InsertBIBLIOTECA(BIBLIOTECA instance);
    partial void UpdateBIBLIOTECA(BIBLIOTECA instance);
    partial void DeleteBIBLIOTECA(BIBLIOTECA instance);
    partial void InsertCATEGORIA(CATEGORIA instance);
    partial void UpdateCATEGORIA(CATEGORIA instance);
    partial void DeleteCATEGORIA(CATEGORIA instance);
    partial void InsertCOMENTARIO(COMENTARIO instance);
    partial void UpdateCOMENTARIO(COMENTARIO instance);
    partial void DeleteCOMENTARIO(COMENTARIO instance);
    partial void InsertCURSO(CURSO instance);
    partial void UpdateCURSO(CURSO instance);
    partial void DeleteCURSO(CURSO instance);
    partial void InsertINDICE(INDICE instance);
    partial void UpdateINDICE(INDICE instance);
    partial void DeleteINDICE(INDICE instance);
    partial void InsertLIBRO(LIBRO instance);
    partial void UpdateLIBRO(LIBRO instance);
    partial void DeleteLIBRO(LIBRO instance);
    partial void InsertNOTA(NOTA instance);
    partial void UpdateNOTA(NOTA instance);
    partial void DeleteNOTA(NOTA instance);
    partial void InsertPERSONA(PERSONA instance);
    partial void UpdatePERSONA(PERSONA instance);
    partial void DeletePERSONA(PERSONA instance);
    partial void InsertTUTORIAL(TUTORIAL instance);
    partial void UpdateTUTORIAL(TUTORIAL instance);
    partial void DeleteTUTORIAL(TUTORIAL instance);
    partial void InsertUSUARIO(USUARIO instance);
    partial void UpdateUSUARIO(USUARIO instance);
    partial void DeleteUSUARIO(USUARIO instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ApplicationServices"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADM_BIBLIOTECA> ADM_BIBLIOTECAs
		{
			get
			{
				return this.GetTable<ADM_BIBLIOTECA>();
			}
		}
		
		public System.Data.Linq.Table<ADMINISTRADOR> ADMINISTRADORs
		{
			get
			{
				return this.GetTable<ADMINISTRADOR>();
			}
		}
		
		public System.Data.Linq.Table<ARCHIVO> ARCHIVOs
		{
			get
			{
				return this.GetTable<ARCHIVO>();
			}
		}
		
		public System.Data.Linq.Table<ARTICULO> ARTICULOs
		{
			get
			{
				return this.GetTable<ARTICULO>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<AUTOR> AUTORs
		{
			get
			{
				return this.GetTable<AUTOR>();
			}
		}
		
		public System.Data.Linq.Table<BIBLIOTECA> BIBLIOTECAs
		{
			get
			{
				return this.GetTable<BIBLIOTECA>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORIA> CATEGORIAs
		{
			get
			{
				return this.GetTable<CATEGORIA>();
			}
		}
		
		public System.Data.Linq.Table<COMENTARIO> COMENTARIOs
		{
			get
			{
				return this.GetTable<COMENTARIO>();
			}
		}
		
		public System.Data.Linq.Table<CURSO> CURSOs
		{
			get
			{
				return this.GetTable<CURSO>();
			}
		}
		
		public System.Data.Linq.Table<INDICE> INDICEs
		{
			get
			{
				return this.GetTable<INDICE>();
			}
		}
		
		public System.Data.Linq.Table<KARMA> KARMAs
		{
			get
			{
				return this.GetTable<KARMA>();
			}
		}
		
		public System.Data.Linq.Table<LIBRO> LIBROs
		{
			get
			{
				return this.GetTable<LIBRO>();
			}
		}
		
		public System.Data.Linq.Table<NOTA> NOTAs
		{
			get
			{
				return this.GetTable<NOTA>();
			}
		}
		
		public System.Data.Linq.Table<PERSONA> PERSONAs
		{
			get
			{
				return this.GetTable<PERSONA>();
			}
		}
		
		public System.Data.Linq.Table<TUTORIAL> TUTORIALs
		{
			get
			{
				return this.GetTable<TUTORIAL>();
			}
		}
		
		public System.Data.Linq.Table<USUARIO> USUARIOs
		{
			get
			{
				return this.GetTable<USUARIO>();
			}
		}
		
		public System.Data.Linq.Table<VISITA> VISITAs
		{
			get
			{
				return this.GetTable<VISITA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADM_BIBLIOTECA")]
	public partial class ADM_BIBLIOTECA
	{
		
		private System.Nullable<int> _ID_CATEGORIA;
		
		private System.Nullable<int> _ID_LIBRO;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private System.Nullable<int> _ID_ADMINISTRADOR;
		
		private string _JERARQUIA;
		
		public ADM_BIBLIOTECA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CATEGORIA", DbType="Int")]
		public System.Nullable<int> ID_CATEGORIA
		{
			get
			{
				return this._ID_CATEGORIA;
			}
			set
			{
				if ((this._ID_CATEGORIA != value))
				{
					this._ID_CATEGORIA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LIBRO", DbType="Int")]
		public System.Nullable<int> ID_LIBRO
		{
			get
			{
				return this._ID_LIBRO;
			}
			set
			{
				if ((this._ID_LIBRO != value))
				{
					this._ID_LIBRO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					this._ID_BIBLIOTECA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADMINISTRADOR", DbType="Int")]
		public System.Nullable<int> ID_ADMINISTRADOR
		{
			get
			{
				return this._ID_ADMINISTRADOR;
			}
			set
			{
				if ((this._ID_ADMINISTRADOR != value))
				{
					this._ID_ADMINISTRADOR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JERARQUIA", DbType="VarChar(50)")]
		public string JERARQUIA
		{
			get
			{
				return this._JERARQUIA;
			}
			set
			{
				if ((this._JERARQUIA != value))
				{
					this._JERARQUIA = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMINISTRADOR")]
	public partial class ADMINISTRADOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ADMINISTRADOR;
		
		private string _CORRECCION;
		
		private string _TIPO;
		
		private EntitySet<BIBLIOTECA> _BIBLIOTECAs;
		
		private EntitySet<LIBRO> _LIBROs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ADMINISTRADORChanging(int value);
    partial void OnID_ADMINISTRADORChanged();
    partial void OnCORRECCIONChanging(string value);
    partial void OnCORRECCIONChanged();
    partial void OnTIPOChanging(string value);
    partial void OnTIPOChanged();
    #endregion
		
		public ADMINISTRADOR()
		{
			this._BIBLIOTECAs = new EntitySet<BIBLIOTECA>(new Action<BIBLIOTECA>(this.attach_BIBLIOTECAs), new Action<BIBLIOTECA>(this.detach_BIBLIOTECAs));
			this._LIBROs = new EntitySet<LIBRO>(new Action<LIBRO>(this.attach_LIBROs), new Action<LIBRO>(this.detach_LIBROs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADMINISTRADOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ADMINISTRADOR
		{
			get
			{
				return this._ID_ADMINISTRADOR;
			}
			set
			{
				if ((this._ID_ADMINISTRADOR != value))
				{
					this.OnID_ADMINISTRADORChanging(value);
					this.SendPropertyChanging();
					this._ID_ADMINISTRADOR = value;
					this.SendPropertyChanged("ID_ADMINISTRADOR");
					this.OnID_ADMINISTRADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CORRECCION", DbType="VarChar(25)")]
		public string CORRECCION
		{
			get
			{
				return this._CORRECCION;
			}
			set
			{
				if ((this._CORRECCION != value))
				{
					this.OnCORRECCIONChanging(value);
					this.SendPropertyChanging();
					this._CORRECCION = value;
					this.SendPropertyChanged("CORRECCION");
					this.OnCORRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO", DbType="VarChar(30)")]
		public string TIPO
		{
			get
			{
				return this._TIPO;
			}
			set
			{
				if ((this._TIPO != value))
				{
					this.OnTIPOChanging(value);
					this.SendPropertyChanging();
					this._TIPO = value;
					this.SendPropertyChanged("TIPO");
					this.OnTIPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADMINISTRADOR_BIBLIOTECA", Storage="_BIBLIOTECAs", ThisKey="ID_ADMINISTRADOR", OtherKey="ID_ADMINISTRADOR")]
		public EntitySet<BIBLIOTECA> BIBLIOTECAs
		{
			get
			{
				return this._BIBLIOTECAs;
			}
			set
			{
				this._BIBLIOTECAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADMINISTRADOR_LIBRO", Storage="_LIBROs", ThisKey="ID_ADMINISTRADOR", OtherKey="ID_ADMINISTRADOR")]
		public EntitySet<LIBRO> LIBROs
		{
			get
			{
				return this._LIBROs;
			}
			set
			{
				this._LIBROs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIBLIOTECAs(BIBLIOTECA entity)
		{
			this.SendPropertyChanging();
			entity.ADMINISTRADOR = this;
		}
		
		private void detach_BIBLIOTECAs(BIBLIOTECA entity)
		{
			this.SendPropertyChanging();
			entity.ADMINISTRADOR = null;
		}
		
		private void attach_LIBROs(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.ADMINISTRADOR = this;
		}
		
		private void detach_LIBROs(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.ADMINISTRADOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ARCHIVOS")]
	public partial class ARCHIVO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ARCHIVO;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private EntityRef<BIBLIOTECA> _BIBLIOTECA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ARCHIVOChanging(int value);
    partial void OnID_ARCHIVOChanged();
    partial void OnID_BIBLIOTECAChanging(System.Nullable<int> value);
    partial void OnID_BIBLIOTECAChanged();
    #endregion
		
		public ARCHIVO()
		{
			this._BIBLIOTECA = default(EntityRef<BIBLIOTECA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ARCHIVO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ARCHIVO
		{
			get
			{
				return this._ID_ARCHIVO;
			}
			set
			{
				if ((this._ID_ARCHIVO != value))
				{
					this.OnID_ARCHIVOChanging(value);
					this.SendPropertyChanging();
					this._ID_ARCHIVO = value;
					this.SendPropertyChanged("ID_ARCHIVO");
					this.OnID_ARCHIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					if (this._BIBLIOTECA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BIBLIOTECAChanging(value);
					this.SendPropertyChanging();
					this._ID_BIBLIOTECA = value;
					this.SendPropertyChanged("ID_BIBLIOTECA");
					this.OnID_BIBLIOTECAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_ARCHIVO", Storage="_BIBLIOTECA", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA", IsForeignKey=true)]
		public BIBLIOTECA BIBLIOTECA
		{
			get
			{
				return this._BIBLIOTECA.Entity;
			}
			set
			{
				BIBLIOTECA previousValue = this._BIBLIOTECA.Entity;
				if (((previousValue != value) 
							|| (this._BIBLIOTECA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIBLIOTECA.Entity = null;
						previousValue.ARCHIVOs.Remove(this);
					}
					this._BIBLIOTECA.Entity = value;
					if ((value != null))
					{
						value.ARCHIVOs.Add(this);
						this._ID_BIBLIOTECA = value.ID_BIBLIOTECA;
					}
					else
					{
						this._ID_BIBLIOTECA = default(Nullable<int>);
					}
					this.SendPropertyChanged("BIBLIOTECA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ARTICULO")]
	public partial class ARTICULO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ARTICULO;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private EntityRef<BIBLIOTECA> _BIBLIOTECA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ARTICULOChanging(int value);
    partial void OnID_ARTICULOChanged();
    partial void OnID_BIBLIOTECAChanging(System.Nullable<int> value);
    partial void OnID_BIBLIOTECAChanged();
    #endregion
		
		public ARTICULO()
		{
			this._BIBLIOTECA = default(EntityRef<BIBLIOTECA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ARTICULO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ARTICULO
		{
			get
			{
				return this._ID_ARTICULO;
			}
			set
			{
				if ((this._ID_ARTICULO != value))
				{
					this.OnID_ARTICULOChanging(value);
					this.SendPropertyChanging();
					this._ID_ARTICULO = value;
					this.SendPropertyChanged("ID_ARTICULO");
					this.OnID_ARTICULOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					if (this._BIBLIOTECA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BIBLIOTECAChanging(value);
					this.SendPropertyChanging();
					this._ID_BIBLIOTECA = value;
					this.SendPropertyChanged("ID_BIBLIOTECA");
					this.OnID_BIBLIOTECAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_ARTICULO", Storage="_BIBLIOTECA", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA", IsForeignKey=true)]
		public BIBLIOTECA BIBLIOTECA
		{
			get
			{
				return this._BIBLIOTECA.Entity;
			}
			set
			{
				BIBLIOTECA previousValue = this._BIBLIOTECA.Entity;
				if (((previousValue != value) 
							|| (this._BIBLIOTECA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIBLIOTECA.Entity = null;
						previousValue.ARTICULOs.Remove(this);
					}
					this._BIBLIOTECA.Entity = value;
					if ((value != null))
					{
						value.ARTICULOs.Add(this);
						this._ID_BIBLIOTECA = value.ID_BIBLIOTECA;
					}
					else
					{
						this._ID_BIBLIOTECA = default(Nullable<int>);
					}
					this.SendPropertyChanged("BIBLIOTECA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AUTOR")]
	public partial class AUTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_AUTOR;
		
		private string _NOMBRE;
		
		private string _APATERNO;
		
		private string _AMATERNO;
		
		private System.Nullable<System.DateTime> _FECHA_NACIMIENTO;
		
		private EntitySet<LIBRO> _LIBROs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AUTORChanging(int value);
    partial void OnID_AUTORChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPATERNOChanging(string value);
    partial void OnAPATERNOChanged();
    partial void OnAMATERNOChanging(string value);
    partial void OnAMATERNOChanged();
    partial void OnFECHA_NACIMIENTOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_NACIMIENTOChanged();
    #endregion
		
		public AUTOR()
		{
			this._LIBROs = new EntitySet<LIBRO>(new Action<LIBRO>(this.attach_LIBROs), new Action<LIBRO>(this.detach_LIBROs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AUTOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_AUTOR
		{
			get
			{
				return this._ID_AUTOR;
			}
			set
			{
				if ((this._ID_AUTOR != value))
				{
					this.OnID_AUTORChanging(value);
					this.SendPropertyChanging();
					this._ID_AUTOR = value;
					this.SendPropertyChanged("ID_AUTOR");
					this.OnID_AUTORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APATERNO", DbType="VarChar(50)")]
		public string APATERNO
		{
			get
			{
				return this._APATERNO;
			}
			set
			{
				if ((this._APATERNO != value))
				{
					this.OnAPATERNOChanging(value);
					this.SendPropertyChanging();
					this._APATERNO = value;
					this.SendPropertyChanged("APATERNO");
					this.OnAPATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMATERNO", DbType="VarChar(50)")]
		public string AMATERNO
		{
			get
			{
				return this._AMATERNO;
			}
			set
			{
				if ((this._AMATERNO != value))
				{
					this.OnAMATERNOChanging(value);
					this.SendPropertyChanging();
					this._AMATERNO = value;
					this.SendPropertyChanged("AMATERNO");
					this.OnAMATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_NACIMIENTO", DbType="Date")]
		public System.Nullable<System.DateTime> FECHA_NACIMIENTO
		{
			get
			{
				return this._FECHA_NACIMIENTO;
			}
			set
			{
				if ((this._FECHA_NACIMIENTO != value))
				{
					this.OnFECHA_NACIMIENTOChanging(value);
					this.SendPropertyChanging();
					this._FECHA_NACIMIENTO = value;
					this.SendPropertyChanged("FECHA_NACIMIENTO");
					this.OnFECHA_NACIMIENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AUTOR_LIBRO", Storage="_LIBROs", ThisKey="ID_AUTOR", OtherKey="ID_AUTOR")]
		public EntitySet<LIBRO> LIBROs
		{
			get
			{
				return this._LIBROs;
			}
			set
			{
				this._LIBROs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LIBROs(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.AUTOR = this;
		}
		
		private void detach_LIBROs(LIBRO entity)
		{
			this.SendPropertyChanging();
			entity.AUTOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIBLIOTECA")]
	public partial class BIBLIOTECA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_BIBLIOTECA;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private string _TEMA;
		
		private System.Nullable<System.DateTime> _FECHA_PUBLI;
		
		private System.Nullable<int> _TOTAL;
		
		private System.Nullable<int> _ID_ADMINISTRADOR;
		
		private System.Nullable<int> _ID_INDICE;
		
		private EntitySet<ARCHIVO> _ARCHIVOs;
		
		private EntitySet<ARTICULO> _ARTICULOs;
		
		private EntitySet<CURSO> _CURSOs;
		
		private EntitySet<NOTA> _NOTAs;
		
		private EntitySet<TUTORIAL> _TUTORIALs;
		
		private EntityRef<ADMINISTRADOR> _ADMINISTRADOR;
		
		private EntityRef<INDICE> _INDICE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BIBLIOTECAChanging(int value);
    partial void OnID_BIBLIOTECAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnTEMAChanging(string value);
    partial void OnTEMAChanged();
    partial void OnFECHA_PUBLIChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHA_PUBLIChanged();
    partial void OnTOTALChanging(System.Nullable<int> value);
    partial void OnTOTALChanged();
    partial void OnID_ADMINISTRADORChanging(System.Nullable<int> value);
    partial void OnID_ADMINISTRADORChanged();
    partial void OnID_INDICEChanging(System.Nullable<int> value);
    partial void OnID_INDICEChanged();
    #endregion
		
		public BIBLIOTECA()
		{
			this._ARCHIVOs = new EntitySet<ARCHIVO>(new Action<ARCHIVO>(this.attach_ARCHIVOs), new Action<ARCHIVO>(this.detach_ARCHIVOs));
			this._ARTICULOs = new EntitySet<ARTICULO>(new Action<ARTICULO>(this.attach_ARTICULOs), new Action<ARTICULO>(this.detach_ARTICULOs));
			this._CURSOs = new EntitySet<CURSO>(new Action<CURSO>(this.attach_CURSOs), new Action<CURSO>(this.detach_CURSOs));
			this._NOTAs = new EntitySet<NOTA>(new Action<NOTA>(this.attach_NOTAs), new Action<NOTA>(this.detach_NOTAs));
			this._TUTORIALs = new EntitySet<TUTORIAL>(new Action<TUTORIAL>(this.attach_TUTORIALs), new Action<TUTORIAL>(this.detach_TUTORIALs));
			this._ADMINISTRADOR = default(EntityRef<ADMINISTRADOR>);
			this._INDICE = default(EntityRef<INDICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					this.OnID_BIBLIOTECAChanging(value);
					this.SendPropertyChanging();
					this._ID_BIBLIOTECA = value;
					this.SendPropertyChanged("ID_BIBLIOTECA");
					this.OnID_BIBLIOTECAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(100)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMA", DbType="VarChar(100)")]
		public string TEMA
		{
			get
			{
				return this._TEMA;
			}
			set
			{
				if ((this._TEMA != value))
				{
					this.OnTEMAChanging(value);
					this.SendPropertyChanging();
					this._TEMA = value;
					this.SendPropertyChanged("TEMA");
					this.OnTEMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA_PUBLI", DbType="Date")]
		public System.Nullable<System.DateTime> FECHA_PUBLI
		{
			get
			{
				return this._FECHA_PUBLI;
			}
			set
			{
				if ((this._FECHA_PUBLI != value))
				{
					this.OnFECHA_PUBLIChanging(value);
					this.SendPropertyChanging();
					this._FECHA_PUBLI = value;
					this.SendPropertyChanged("FECHA_PUBLI");
					this.OnFECHA_PUBLIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Int")]
		public System.Nullable<int> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADMINISTRADOR", DbType="Int")]
		public System.Nullable<int> ID_ADMINISTRADOR
		{
			get
			{
				return this._ID_ADMINISTRADOR;
			}
			set
			{
				if ((this._ID_ADMINISTRADOR != value))
				{
					if (this._ADMINISTRADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ADMINISTRADORChanging(value);
					this.SendPropertyChanging();
					this._ID_ADMINISTRADOR = value;
					this.SendPropertyChanged("ID_ADMINISTRADOR");
					this.OnID_ADMINISTRADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_INDICE", DbType="Int")]
		public System.Nullable<int> ID_INDICE
		{
			get
			{
				return this._ID_INDICE;
			}
			set
			{
				if ((this._ID_INDICE != value))
				{
					if (this._INDICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_INDICEChanging(value);
					this.SendPropertyChanging();
					this._ID_INDICE = value;
					this.SendPropertyChanged("ID_INDICE");
					this.OnID_INDICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_ARCHIVO", Storage="_ARCHIVOs", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA")]
		public EntitySet<ARCHIVO> ARCHIVOs
		{
			get
			{
				return this._ARCHIVOs;
			}
			set
			{
				this._ARCHIVOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_ARTICULO", Storage="_ARTICULOs", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA")]
		public EntitySet<ARTICULO> ARTICULOs
		{
			get
			{
				return this._ARTICULOs;
			}
			set
			{
				this._ARTICULOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_CURSO", Storage="_CURSOs", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA")]
		public EntitySet<CURSO> CURSOs
		{
			get
			{
				return this._CURSOs;
			}
			set
			{
				this._CURSOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_NOTA", Storage="_NOTAs", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA")]
		public EntitySet<NOTA> NOTAs
		{
			get
			{
				return this._NOTAs;
			}
			set
			{
				this._NOTAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_TUTORIAL", Storage="_TUTORIALs", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA")]
		public EntitySet<TUTORIAL> TUTORIALs
		{
			get
			{
				return this._TUTORIALs;
			}
			set
			{
				this._TUTORIALs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADMINISTRADOR_BIBLIOTECA", Storage="_ADMINISTRADOR", ThisKey="ID_ADMINISTRADOR", OtherKey="ID_ADMINISTRADOR", IsForeignKey=true)]
		public ADMINISTRADOR ADMINISTRADOR
		{
			get
			{
				return this._ADMINISTRADOR.Entity;
			}
			set
			{
				ADMINISTRADOR previousValue = this._ADMINISTRADOR.Entity;
				if (((previousValue != value) 
							|| (this._ADMINISTRADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADMINISTRADOR.Entity = null;
						previousValue.BIBLIOTECAs.Remove(this);
					}
					this._ADMINISTRADOR.Entity = value;
					if ((value != null))
					{
						value.BIBLIOTECAs.Add(this);
						this._ID_ADMINISTRADOR = value.ID_ADMINISTRADOR;
					}
					else
					{
						this._ID_ADMINISTRADOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADMINISTRADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INDICE_BIBLIOTECA", Storage="_INDICE", ThisKey="ID_INDICE", OtherKey="ID_INDICE", IsForeignKey=true)]
		public INDICE INDICE
		{
			get
			{
				return this._INDICE.Entity;
			}
			set
			{
				INDICE previousValue = this._INDICE.Entity;
				if (((previousValue != value) 
							|| (this._INDICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INDICE.Entity = null;
						previousValue.BIBLIOTECAs.Remove(this);
					}
					this._INDICE.Entity = value;
					if ((value != null))
					{
						value.BIBLIOTECAs.Add(this);
						this._ID_INDICE = value.ID_INDICE;
					}
					else
					{
						this._ID_INDICE = default(Nullable<int>);
					}
					this.SendPropertyChanged("INDICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ARCHIVOs(ARCHIVO entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = this;
		}
		
		private void detach_ARCHIVOs(ARCHIVO entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = null;
		}
		
		private void attach_ARTICULOs(ARTICULO entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = this;
		}
		
		private void detach_ARTICULOs(ARTICULO entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = null;
		}
		
		private void attach_CURSOs(CURSO entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = this;
		}
		
		private void detach_CURSOs(CURSO entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = null;
		}
		
		private void attach_NOTAs(NOTA entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = this;
		}
		
		private void detach_NOTAs(NOTA entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = null;
		}
		
		private void attach_TUTORIALs(TUTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = this;
		}
		
		private void detach_TUTORIALs(TUTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.BIBLIOTECA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIA")]
	public partial class CATEGORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CATEGORIA;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private string _DIVISION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CATEGORIAChanging(int value);
    partial void OnID_CATEGORIAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnDIVISIONChanging(string value);
    partial void OnDIVISIONChanged();
    #endregion
		
		public CATEGORIA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CATEGORIA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CATEGORIA
		{
			get
			{
				return this._ID_CATEGORIA;
			}
			set
			{
				if ((this._ID_CATEGORIA != value))
				{
					this.OnID_CATEGORIAChanging(value);
					this.SendPropertyChanging();
					this._ID_CATEGORIA = value;
					this.SendPropertyChanged("ID_CATEGORIA");
					this.OnID_CATEGORIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(300)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIVISION", DbType="VarChar(100)")]
		public string DIVISION
		{
			get
			{
				return this._DIVISION;
			}
			set
			{
				if ((this._DIVISION != value))
				{
					this.OnDIVISIONChanging(value);
					this.SendPropertyChanging();
					this._DIVISION = value;
					this.SendPropertyChanged("DIVISION");
					this.OnDIVISIONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMENTARIO")]
	public partial class COMENTARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_COMENTARIO;
		
		private string _NOMBRE;
		
		private string _COMENTARIO1;
		
		private System.Nullable<int> _ID_NOTA;
		
		private EntityRef<NOTA> _NOTA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_COMENTARIOChanging(int value);
    partial void OnID_COMENTARIOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnCOMENTARIO1Changing(string value);
    partial void OnCOMENTARIO1Changed();
    partial void OnID_NOTAChanging(System.Nullable<int> value);
    partial void OnID_NOTAChanged();
    #endregion
		
		public COMENTARIO()
		{
			this._NOTA = default(EntityRef<NOTA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_COMENTARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_COMENTARIO
		{
			get
			{
				return this._ID_COMENTARIO;
			}
			set
			{
				if ((this._ID_COMENTARIO != value))
				{
					this.OnID_COMENTARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_COMENTARIO = value;
					this.SendPropertyChanged("ID_COMENTARIO");
					this.OnID_COMENTARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="COMENTARIO", Storage="_COMENTARIO1", DbType="VarChar(300)")]
		public string COMENTARIO1
		{
			get
			{
				return this._COMENTARIO1;
			}
			set
			{
				if ((this._COMENTARIO1 != value))
				{
					this.OnCOMENTARIO1Changing(value);
					this.SendPropertyChanging();
					this._COMENTARIO1 = value;
					this.SendPropertyChanged("COMENTARIO1");
					this.OnCOMENTARIO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NOTA", DbType="Int")]
		public System.Nullable<int> ID_NOTA
		{
			get
			{
				return this._ID_NOTA;
			}
			set
			{
				if ((this._ID_NOTA != value))
				{
					if (this._NOTA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NOTAChanging(value);
					this.SendPropertyChanging();
					this._ID_NOTA = value;
					this.SendPropertyChanged("ID_NOTA");
					this.OnID_NOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NOTA_COMENTARIO", Storage="_NOTA", ThisKey="ID_NOTA", OtherKey="ID_NOTA", IsForeignKey=true)]
		public NOTA NOTA
		{
			get
			{
				return this._NOTA.Entity;
			}
			set
			{
				NOTA previousValue = this._NOTA.Entity;
				if (((previousValue != value) 
							|| (this._NOTA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NOTA.Entity = null;
						previousValue.COMENTARIOs.Remove(this);
					}
					this._NOTA.Entity = value;
					if ((value != null))
					{
						value.COMENTARIOs.Add(this);
						this._ID_NOTA = value.ID_NOTA;
					}
					else
					{
						this._ID_NOTA = default(Nullable<int>);
					}
					this.SendPropertyChanged("NOTA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CURSO")]
	public partial class CURSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CURSO;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private EntityRef<BIBLIOTECA> _BIBLIOTECA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CURSOChanging(int value);
    partial void OnID_CURSOChanged();
    partial void OnID_BIBLIOTECAChanging(System.Nullable<int> value);
    partial void OnID_BIBLIOTECAChanged();
    #endregion
		
		public CURSO()
		{
			this._BIBLIOTECA = default(EntityRef<BIBLIOTECA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CURSO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CURSO
		{
			get
			{
				return this._ID_CURSO;
			}
			set
			{
				if ((this._ID_CURSO != value))
				{
					this.OnID_CURSOChanging(value);
					this.SendPropertyChanging();
					this._ID_CURSO = value;
					this.SendPropertyChanged("ID_CURSO");
					this.OnID_CURSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					if (this._BIBLIOTECA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BIBLIOTECAChanging(value);
					this.SendPropertyChanging();
					this._ID_BIBLIOTECA = value;
					this.SendPropertyChanged("ID_BIBLIOTECA");
					this.OnID_BIBLIOTECAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_CURSO", Storage="_BIBLIOTECA", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA", IsForeignKey=true)]
		public BIBLIOTECA BIBLIOTECA
		{
			get
			{
				return this._BIBLIOTECA.Entity;
			}
			set
			{
				BIBLIOTECA previousValue = this._BIBLIOTECA.Entity;
				if (((previousValue != value) 
							|| (this._BIBLIOTECA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIBLIOTECA.Entity = null;
						previousValue.CURSOs.Remove(this);
					}
					this._BIBLIOTECA.Entity = value;
					if ((value != null))
					{
						value.CURSOs.Add(this);
						this._ID_BIBLIOTECA = value.ID_BIBLIOTECA;
					}
					else
					{
						this._ID_BIBLIOTECA = default(Nullable<int>);
					}
					this.SendPropertyChanged("BIBLIOTECA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INDICE")]
	public partial class INDICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_INDICE;
		
		private string _NOMBRE;
		
		private string _URL;
		
		private EntitySet<BIBLIOTECA> _BIBLIOTECAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_INDICEChanging(int value);
    partial void OnID_INDICEChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public INDICE()
		{
			this._BIBLIOTECAs = new EntitySet<BIBLIOTECA>(new Action<BIBLIOTECA>(this.attach_BIBLIOTECAs), new Action<BIBLIOTECA>(this.detach_BIBLIOTECAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_INDICE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_INDICE
		{
			get
			{
				return this._ID_INDICE;
			}
			set
			{
				if ((this._ID_INDICE != value))
				{
					this.OnID_INDICEChanging(value);
					this.SendPropertyChanging();
					this._ID_INDICE = value;
					this.SendPropertyChanged("ID_INDICE");
					this.OnID_INDICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(150)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INDICE_BIBLIOTECA", Storage="_BIBLIOTECAs", ThisKey="ID_INDICE", OtherKey="ID_INDICE")]
		public EntitySet<BIBLIOTECA> BIBLIOTECAs
		{
			get
			{
				return this._BIBLIOTECAs;
			}
			set
			{
				this._BIBLIOTECAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIBLIOTECAs(BIBLIOTECA entity)
		{
			this.SendPropertyChanging();
			entity.INDICE = this;
		}
		
		private void detach_BIBLIOTECAs(BIBLIOTECA entity)
		{
			this.SendPropertyChanging();
			entity.INDICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KARMA")]
	public partial class KARMA
	{
		
		private int _ID_KARMA;
		
		private System.Nullable<int> _ID_USUARIO;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private System.Nullable<int> _ID_LIBRO;
		
		public KARMA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KARMA", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID_KARMA
		{
			get
			{
				return this._ID_KARMA;
			}
			set
			{
				if ((this._ID_KARMA != value))
				{
					this._ID_KARMA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USUARIO", DbType="Int")]
		public System.Nullable<int> ID_USUARIO
		{
			get
			{
				return this._ID_USUARIO;
			}
			set
			{
				if ((this._ID_USUARIO != value))
				{
					this._ID_USUARIO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					this._ID_BIBLIOTECA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LIBRO", DbType="Int")]
		public System.Nullable<int> ID_LIBRO
		{
			get
			{
				return this._ID_LIBRO;
			}
			set
			{
				if ((this._ID_LIBRO != value))
				{
					this._ID_LIBRO = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LIBRO")]
	public partial class LIBRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_LIBRO;
		
		private System.Nullable<int> _AÑO_PUBLICACION;
		
		private string _TEMA;
		
		private string _DESCRPCION;
		
		private System.Nullable<double> _TOTAL;
		
		private System.Nullable<int> _ID_AUTOR;
		
		private System.Nullable<int> _ID_ADMINISTRADOR;
		
		private EntitySet<NOTA> _NOTAs;
		
		private EntityRef<ADMINISTRADOR> _ADMINISTRADOR;
		
		private EntityRef<AUTOR> _AUTOR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LIBROChanging(int value);
    partial void OnID_LIBROChanged();
    partial void OnAÑO_PUBLICACIONChanging(System.Nullable<int> value);
    partial void OnAÑO_PUBLICACIONChanged();
    partial void OnTEMAChanging(string value);
    partial void OnTEMAChanged();
    partial void OnDESCRPCIONChanging(string value);
    partial void OnDESCRPCIONChanged();
    partial void OnTOTALChanging(System.Nullable<double> value);
    partial void OnTOTALChanged();
    partial void OnID_AUTORChanging(System.Nullable<int> value);
    partial void OnID_AUTORChanged();
    partial void OnID_ADMINISTRADORChanging(System.Nullable<int> value);
    partial void OnID_ADMINISTRADORChanged();
    #endregion
		
		public LIBRO()
		{
			this._NOTAs = new EntitySet<NOTA>(new Action<NOTA>(this.attach_NOTAs), new Action<NOTA>(this.detach_NOTAs));
			this._ADMINISTRADOR = default(EntityRef<ADMINISTRADOR>);
			this._AUTOR = default(EntityRef<AUTOR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LIBRO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_LIBRO
		{
			get
			{
				return this._ID_LIBRO;
			}
			set
			{
				if ((this._ID_LIBRO != value))
				{
					this.OnID_LIBROChanging(value);
					this.SendPropertyChanging();
					this._ID_LIBRO = value;
					this.SendPropertyChanged("ID_LIBRO");
					this.OnID_LIBROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AÑO_PUBLICACION", DbType="Int")]
		public System.Nullable<int> AÑO_PUBLICACION
		{
			get
			{
				return this._AÑO_PUBLICACION;
			}
			set
			{
				if ((this._AÑO_PUBLICACION != value))
				{
					this.OnAÑO_PUBLICACIONChanging(value);
					this.SendPropertyChanging();
					this._AÑO_PUBLICACION = value;
					this.SendPropertyChanged("AÑO_PUBLICACION");
					this.OnAÑO_PUBLICACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEMA", DbType="VarChar(100)")]
		public string TEMA
		{
			get
			{
				return this._TEMA;
			}
			set
			{
				if ((this._TEMA != value))
				{
					this.OnTEMAChanging(value);
					this.SendPropertyChanging();
					this._TEMA = value;
					this.SendPropertyChanged("TEMA");
					this.OnTEMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRPCION", DbType="VarChar(100)")]
		public string DESCRPCION
		{
			get
			{
				return this._DESCRPCION;
			}
			set
			{
				if ((this._DESCRPCION != value))
				{
					this.OnDESCRPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRPCION = value;
					this.SendPropertyChanged("DESCRPCION");
					this.OnDESCRPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Float")]
		public System.Nullable<double> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AUTOR", DbType="Int")]
		public System.Nullable<int> ID_AUTOR
		{
			get
			{
				return this._ID_AUTOR;
			}
			set
			{
				if ((this._ID_AUTOR != value))
				{
					if (this._AUTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AUTORChanging(value);
					this.SendPropertyChanging();
					this._ID_AUTOR = value;
					this.SendPropertyChanged("ID_AUTOR");
					this.OnID_AUTORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ADMINISTRADOR", DbType="Int")]
		public System.Nullable<int> ID_ADMINISTRADOR
		{
			get
			{
				return this._ID_ADMINISTRADOR;
			}
			set
			{
				if ((this._ID_ADMINISTRADOR != value))
				{
					if (this._ADMINISTRADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ADMINISTRADORChanging(value);
					this.SendPropertyChanging();
					this._ID_ADMINISTRADOR = value;
					this.SendPropertyChanged("ID_ADMINISTRADOR");
					this.OnID_ADMINISTRADORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIBRO_NOTA", Storage="_NOTAs", ThisKey="ID_LIBRO", OtherKey="ID_LIBRO")]
		public EntitySet<NOTA> NOTAs
		{
			get
			{
				return this._NOTAs;
			}
			set
			{
				this._NOTAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADMINISTRADOR_LIBRO", Storage="_ADMINISTRADOR", ThisKey="ID_ADMINISTRADOR", OtherKey="ID_ADMINISTRADOR", IsForeignKey=true)]
		public ADMINISTRADOR ADMINISTRADOR
		{
			get
			{
				return this._ADMINISTRADOR.Entity;
			}
			set
			{
				ADMINISTRADOR previousValue = this._ADMINISTRADOR.Entity;
				if (((previousValue != value) 
							|| (this._ADMINISTRADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADMINISTRADOR.Entity = null;
						previousValue.LIBROs.Remove(this);
					}
					this._ADMINISTRADOR.Entity = value;
					if ((value != null))
					{
						value.LIBROs.Add(this);
						this._ID_ADMINISTRADOR = value.ID_ADMINISTRADOR;
					}
					else
					{
						this._ID_ADMINISTRADOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("ADMINISTRADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AUTOR_LIBRO", Storage="_AUTOR", ThisKey="ID_AUTOR", OtherKey="ID_AUTOR", IsForeignKey=true)]
		public AUTOR AUTOR
		{
			get
			{
				return this._AUTOR.Entity;
			}
			set
			{
				AUTOR previousValue = this._AUTOR.Entity;
				if (((previousValue != value) 
							|| (this._AUTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AUTOR.Entity = null;
						previousValue.LIBROs.Remove(this);
					}
					this._AUTOR.Entity = value;
					if ((value != null))
					{
						value.LIBROs.Add(this);
						this._ID_AUTOR = value.ID_AUTOR;
					}
					else
					{
						this._ID_AUTOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("AUTOR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NOTAs(NOTA entity)
		{
			this.SendPropertyChanging();
			entity.LIBRO = this;
		}
		
		private void detach_NOTAs(NOTA entity)
		{
			this.SendPropertyChanging();
			entity.LIBRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NOTAS")]
	public partial class NOTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NOTA;
		
		private System.Nullable<System.DateTime> _FECHA;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private System.Nullable<int> _ID_LIBRO;
		
		private EntitySet<COMENTARIO> _COMENTARIOs;
		
		private EntityRef<BIBLIOTECA> _BIBLIOTECA;
		
		private EntityRef<LIBRO> _LIBRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NOTAChanging(int value);
    partial void OnID_NOTAChanged();
    partial void OnFECHAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHAChanged();
    partial void OnID_BIBLIOTECAChanging(System.Nullable<int> value);
    partial void OnID_BIBLIOTECAChanged();
    partial void OnID_LIBROChanging(System.Nullable<int> value);
    partial void OnID_LIBROChanged();
    #endregion
		
		public NOTA()
		{
			this._COMENTARIOs = new EntitySet<COMENTARIO>(new Action<COMENTARIO>(this.attach_COMENTARIOs), new Action<COMENTARIO>(this.detach_COMENTARIOs));
			this._BIBLIOTECA = default(EntityRef<BIBLIOTECA>);
			this._LIBRO = default(EntityRef<LIBRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NOTA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NOTA
		{
			get
			{
				return this._ID_NOTA;
			}
			set
			{
				if ((this._ID_NOTA != value))
				{
					this.OnID_NOTAChanging(value);
					this.SendPropertyChanging();
					this._ID_NOTA = value;
					this.SendPropertyChanged("ID_NOTA");
					this.OnID_NOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date")]
		public System.Nullable<System.DateTime> FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					if (this._BIBLIOTECA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BIBLIOTECAChanging(value);
					this.SendPropertyChanging();
					this._ID_BIBLIOTECA = value;
					this.SendPropertyChanged("ID_BIBLIOTECA");
					this.OnID_BIBLIOTECAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LIBRO", DbType="Int")]
		public System.Nullable<int> ID_LIBRO
		{
			get
			{
				return this._ID_LIBRO;
			}
			set
			{
				if ((this._ID_LIBRO != value))
				{
					if (this._LIBRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LIBROChanging(value);
					this.SendPropertyChanging();
					this._ID_LIBRO = value;
					this.SendPropertyChanged("ID_LIBRO");
					this.OnID_LIBROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NOTA_COMENTARIO", Storage="_COMENTARIOs", ThisKey="ID_NOTA", OtherKey="ID_NOTA")]
		public EntitySet<COMENTARIO> COMENTARIOs
		{
			get
			{
				return this._COMENTARIOs;
			}
			set
			{
				this._COMENTARIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_NOTA", Storage="_BIBLIOTECA", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA", IsForeignKey=true)]
		public BIBLIOTECA BIBLIOTECA
		{
			get
			{
				return this._BIBLIOTECA.Entity;
			}
			set
			{
				BIBLIOTECA previousValue = this._BIBLIOTECA.Entity;
				if (((previousValue != value) 
							|| (this._BIBLIOTECA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIBLIOTECA.Entity = null;
						previousValue.NOTAs.Remove(this);
					}
					this._BIBLIOTECA.Entity = value;
					if ((value != null))
					{
						value.NOTAs.Add(this);
						this._ID_BIBLIOTECA = value.ID_BIBLIOTECA;
					}
					else
					{
						this._ID_BIBLIOTECA = default(Nullable<int>);
					}
					this.SendPropertyChanged("BIBLIOTECA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LIBRO_NOTA", Storage="_LIBRO", ThisKey="ID_LIBRO", OtherKey="ID_LIBRO", IsForeignKey=true)]
		public LIBRO LIBRO
		{
			get
			{
				return this._LIBRO.Entity;
			}
			set
			{
				LIBRO previousValue = this._LIBRO.Entity;
				if (((previousValue != value) 
							|| (this._LIBRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LIBRO.Entity = null;
						previousValue.NOTAs.Remove(this);
					}
					this._LIBRO.Entity = value;
					if ((value != null))
					{
						value.NOTAs.Add(this);
						this._ID_LIBRO = value.ID_LIBRO;
					}
					else
					{
						this._ID_LIBRO = default(Nullable<int>);
					}
					this.SendPropertyChanged("LIBRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_COMENTARIOs(COMENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.NOTA = this;
		}
		
		private void detach_COMENTARIOs(COMENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.NOTA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONA")]
	public partial class PERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PERSONA;
		
		private string _NOMBRE;
		
		private string _APATERNO;
		
		private string _AMATERNO;
		
		private string _DESCRIPCION;
		
		private string _UBICACION;
		
		private string _AVATAR;
		
		private System.Nullable<System.Guid> _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PERSONAChanging(int value);
    partial void OnID_PERSONAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPATERNOChanging(string value);
    partial void OnAPATERNOChanged();
    partial void OnAMATERNOChanging(string value);
    partial void OnAMATERNOChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnUBICACIONChanging(string value);
    partial void OnUBICACIONChanged();
    partial void OnAVATARChanging(string value);
    partial void OnAVATARChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    #endregion
		
		public PERSONA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PERSONA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PERSONA
		{
			get
			{
				return this._ID_PERSONA;
			}
			set
			{
				if ((this._ID_PERSONA != value))
				{
					this.OnID_PERSONAChanging(value);
					this.SendPropertyChanging();
					this._ID_PERSONA = value;
					this.SendPropertyChanged("ID_PERSONA");
					this.OnID_PERSONAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APATERNO", DbType="VarChar(50)")]
		public string APATERNO
		{
			get
			{
				return this._APATERNO;
			}
			set
			{
				if ((this._APATERNO != value))
				{
					this.OnAPATERNOChanging(value);
					this.SendPropertyChanging();
					this._APATERNO = value;
					this.SendPropertyChanged("APATERNO");
					this.OnAPATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMATERNO", DbType="VarChar(50)")]
		public string AMATERNO
		{
			get
			{
				return this._AMATERNO;
			}
			set
			{
				if ((this._AMATERNO != value))
				{
					this.OnAMATERNOChanging(value);
					this.SendPropertyChanging();
					this._AMATERNO = value;
					this.SendPropertyChanged("AMATERNO");
					this.OnAMATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(200)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UBICACION", DbType="VarChar(50)")]
		public string UBICACION
		{
			get
			{
				return this._UBICACION;
			}
			set
			{
				if ((this._UBICACION != value))
				{
					this.OnUBICACIONChanging(value);
					this.SendPropertyChanging();
					this._UBICACION = value;
					this.SendPropertyChanged("UBICACION");
					this.OnUBICACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVATAR", DbType="VarChar(100)")]
		public string AVATAR
		{
			get
			{
				return this._AVATAR;
			}
			set
			{
				if ((this._AVATAR != value))
				{
					this.OnAVATARChanging(value);
					this.SendPropertyChanging();
					this._AVATAR = value;
					this.SendPropertyChanged("AVATAR");
					this.OnAVATARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUTORIAL")]
	public partial class TUTORIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TUTORIAL;
		
		private System.Nullable<int> _ID_BIBLIOTECA;
		
		private EntityRef<BIBLIOTECA> _BIBLIOTECA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TUTORIALChanging(int value);
    partial void OnID_TUTORIALChanged();
    partial void OnID_BIBLIOTECAChanging(System.Nullable<int> value);
    partial void OnID_BIBLIOTECAChanged();
    #endregion
		
		public TUTORIAL()
		{
			this._BIBLIOTECA = default(EntityRef<BIBLIOTECA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TUTORIAL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TUTORIAL
		{
			get
			{
				return this._ID_TUTORIAL;
			}
			set
			{
				if ((this._ID_TUTORIAL != value))
				{
					this.OnID_TUTORIALChanging(value);
					this.SendPropertyChanging();
					this._ID_TUTORIAL = value;
					this.SendPropertyChanged("ID_TUTORIAL");
					this.OnID_TUTORIALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BIBLIOTECA", DbType="Int")]
		public System.Nullable<int> ID_BIBLIOTECA
		{
			get
			{
				return this._ID_BIBLIOTECA;
			}
			set
			{
				if ((this._ID_BIBLIOTECA != value))
				{
					if (this._BIBLIOTECA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BIBLIOTECAChanging(value);
					this.SendPropertyChanging();
					this._ID_BIBLIOTECA = value;
					this.SendPropertyChanged("ID_BIBLIOTECA");
					this.OnID_BIBLIOTECAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIBLIOTECA_TUTORIAL", Storage="_BIBLIOTECA", ThisKey="ID_BIBLIOTECA", OtherKey="ID_BIBLIOTECA", IsForeignKey=true)]
		public BIBLIOTECA BIBLIOTECA
		{
			get
			{
				return this._BIBLIOTECA.Entity;
			}
			set
			{
				BIBLIOTECA previousValue = this._BIBLIOTECA.Entity;
				if (((previousValue != value) 
							|| (this._BIBLIOTECA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIBLIOTECA.Entity = null;
						previousValue.TUTORIALs.Remove(this);
					}
					this._BIBLIOTECA.Entity = value;
					if ((value != null))
					{
						value.TUTORIALs.Add(this);
						this._ID_BIBLIOTECA = value.ID_BIBLIOTECA;
					}
					else
					{
						this._ID_BIBLIOTECA = default(Nullable<int>);
					}
					this.SendPropertyChanged("BIBLIOTECA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USUARIO")]
	public partial class USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_USUARIO;
		
		private string _NICK;
		
		private string _CONTRASEÑA;
		
		private string _NIVEL_ACCESO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USUARIOChanging(int value);
    partial void OnID_USUARIOChanged();
    partial void OnNICKChanging(string value);
    partial void OnNICKChanged();
    partial void OnCONTRASEÑAChanging(string value);
    partial void OnCONTRASEÑAChanged();
    partial void OnNIVEL_ACCESOChanging(string value);
    partial void OnNIVEL_ACCESOChanged();
    #endregion
		
		public USUARIO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USUARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_USUARIO
		{
			get
			{
				return this._ID_USUARIO;
			}
			set
			{
				if ((this._ID_USUARIO != value))
				{
					this.OnID_USUARIOChanging(value);
					this.SendPropertyChanging();
					this._ID_USUARIO = value;
					this.SendPropertyChanged("ID_USUARIO");
					this.OnID_USUARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NICK", DbType="VarChar(50)")]
		public string NICK
		{
			get
			{
				return this._NICK;
			}
			set
			{
				if ((this._NICK != value))
				{
					this.OnNICKChanging(value);
					this.SendPropertyChanging();
					this._NICK = value;
					this.SendPropertyChanged("NICK");
					this.OnNICKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTRASEÑA", DbType="VarChar(50)")]
		public string CONTRASEÑA
		{
			get
			{
				return this._CONTRASEÑA;
			}
			set
			{
				if ((this._CONTRASEÑA != value))
				{
					this.OnCONTRASEÑAChanging(value);
					this.SendPropertyChanging();
					this._CONTRASEÑA = value;
					this.SendPropertyChanged("CONTRASEÑA");
					this.OnCONTRASEÑAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIVEL_ACCESO", DbType="VarChar(50)")]
		public string NIVEL_ACCESO
		{
			get
			{
				return this._NIVEL_ACCESO;
			}
			set
			{
				if ((this._NIVEL_ACCESO != value))
				{
					this.OnNIVEL_ACCESOChanging(value);
					this.SendPropertyChanging();
					this._NIVEL_ACCESO = value;
					this.SendPropertyChanged("NIVEL_ACCESO");
					this.OnNIVEL_ACCESOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VISITAS")]
	public partial class VISITA
	{
		
		private int _ID_VISITA;
		
		private System.Nullable<int> _ID_NOTA;
		
		public VISITA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_VISITA", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID_VISITA
		{
			get
			{
				return this._ID_VISITA;
			}
			set
			{
				if ((this._ID_VISITA != value))
				{
					this._ID_VISITA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NOTA", DbType="Int")]
		public System.Nullable<int> ID_NOTA
		{
			get
			{
				return this._ID_NOTA;
			}
			set
			{
				if ((this._ID_NOTA != value))
				{
					this._ID_NOTA = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
